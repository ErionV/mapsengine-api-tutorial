##Create Features II##  
The body of the POST request to create a feature has to be in the JSON format, where each feature is a GeoJSON feature. The body has to be a features array. From 1 to 50 features can be appended to a table in a single request.  
Each feature within the array must contain:

* `type` whose value is `Feature`.
* `geometry field`. The value might be null. If not, it must contain:
	* `type`. Supported types are `Point`, `LineString`, `Polygon`, and `GeometryCollection`. To read more about these types, you can read the documentation [here](//developers.google.com/maps-engine/documentation/reference/v1/tables/features#geometry-objects)
	* `coordinates`, containing one or more positions. A `position` is an array containing a single longitude, a single latitude, and optionally a single altitude value, in that order. 
* `properties`, with one or more entries which conform to the target table's schema. It must contain:
	* `gx_id`, whose value is unique within the table. You can create your own `gx_id` but make sure that no other feature in the table has the same ID.
	* other properties in table's schema. String and integer values must be enclosed in double quotes ("), while float values must not be enclosed in quotes.

###Exercise###  
Try to create a POST body request to insert *one* feature to your 'World Famous Mountains' table. We have created the URL and the header of the request for you so you do not need to modify them. The details of the feature is up to your liking, but remember that you have to follow the schema of the table. The body has to be a `features` array, with each feature contains:

* `type`
* `geometry`, which includes `type` and `coordinates`
* `properties`, which includes `gx_id`, `mountain_name`, and `height` 
Do not use `gx_id` of `100`, as it has been used in the previous lesson. Also remember that the `height` property is an integer. You can refer to the body example in the previous lesson to create this body.